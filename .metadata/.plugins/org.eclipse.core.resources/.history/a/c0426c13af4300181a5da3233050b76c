package com.taotao.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.taotao.common.pojo.EUTreeNode;
import com.taotao.common.pojo.TaotaoResult;
import com.taotao.mapper.TbContentCategoryMapper;
import com.taotao.pojo.TbContentCategory;
import com.taotao.pojo.TbContentCategoryExample;
import com.taotao.pojo.TbContentCategoryExample.Criteria;
import com.taotao.service.ContentCategoryService;


@Service
public class ContentCategoryServiceImpl implements ContentCategoryService {

	@Autowired
	private TbContentCategoryMapper contentCategorpMapper;
	
	@Override
	public List<EUTreeNode> getCategoryList(long parentId) {
		TbContentCategoryExample example =new TbContentCategoryExample();
		Criteria criteria = example.createCriteria();
		criteria.andParentIdEqualTo(parentId);
		
		List<TbContentCategory> list = contentCategorpMapper.selectByExample(example);
		
		List<EUTreeNode> resultList = new ArrayList<>();
		
		for (TbContentCategory tbContentCategory : list) {
			
			EUTreeNode node = new EUTreeNode();
			node.setId(tbContentCategory.getId());
			node.setText(tbContentCategory.getName());
			node.setState(tbContentCategory.getIsParent()?"closed":"open");
			
			resultList.add(node);
			
			
			
		}
		
		return resultList;
	}

	@Override
	public TaotaoResult insertContentCategory(long parentId, String name) {

		TbContentCategory contentCategory =new TbContentCategory();
		contentCategory.setName(name);
		contentCategory.setIsParent(false);
		contentCategory.setStatus(1);
		contentCategory.setParentId(parentId);
		contentCategory.setSortOrder(1);
		contentCategory.setCreated(new Date());
		contentCategory.setUpdated(new Date());
		
		contentCategorpMapper.insert(contentCategory);
		
		TbContentCategory parentCat = contentCategorpMapper.selectByPrimaryKey(parentId);
		if(!parentCat.getIsParent()){
			
			parentCat.setIsParent(true);
			contentCategorpMapper.updateByPrimaryKey(parentCat);
		}
		
		return TaotaoResult.ok(contentCategory);
	}

	@Override
	public TaotaoResult deleteContentCategory(long id) {
		TbContentCategoryExample example =new TbContentCategoryExample();
		Criteria criteria = example.createCriteria();
		criteria.andIdEqualTo(id);
		contentCategorpMapper.deleteByExample(example);
		
		TbContentCategory tbContentCategory =(TbContentCategory) contentCategorpMapper.selectByExample(example);
		tbContentCategory.getParentId();
		
		return TaotaoResult.ok();
	}

	@Override
	public TaotaoResult updateContentCategory(long id,String name) {
		TbContentCategory contentCategory =new TbContentCategory();
		contentCategory.setId(id);
		contentCategory.setName(name);
		contentCategory.setUpdated(new Date());
		contentCategorpMapper.updateByPrimaryKeySelective(contentCategory);
		return TaotaoResult.ok();
	}

}
